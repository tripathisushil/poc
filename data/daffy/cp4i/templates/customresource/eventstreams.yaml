apiVersion: eventstreams.ibm.com/v1beta1
kind: EventStreams
metadata:
  name: eventstreams
  namespace: "@CP4I_NAMESPACE@"
spec:
  adminApi: {}
  adminUI: {}
  apicurioRegistry: {}
  collector: {}
  license:
    accept: true
    use: @CP4I_LICENSE_USE@
  requestIbmServices:
    iam: true
    monitoring: true
  restProducer: {}
  strimziOverrides:
    kafka:
      authorization:
        type: runas
      config:
        inter.broker.protocol.version: '2.8'
        interceptor.class.names: com.ibm.eventstreams.interceptors.metrics.ProducerMetricsInterceptor
        log.cleaner.threads: 6
        log.message.format.version: '2.8'
        num.io.threads: 24
        num.network.threads: 9
        num.replica.fetchers: 3
        offsets.topic.replication.factor: 3
      listeners:
        external:
          authentication:
            type: scram-sha-512
          type: route
        tls:
          authentication:
            type: tls
      metrics: {}
      replicas: 3
      storage:
        class: @CP4I_BLOCK_CLASS@
        size: 4Gi
        type: persistent-claim
    zookeeper:
      metrics: {}
      replicas: 3
      storage:
        class: @CP4I_BLOCK_CLASS@
        size: 2Gi
        type: persistent-claim
  version: "@ES_VERSION@"
